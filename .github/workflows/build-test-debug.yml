name: Build & Test Debug

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: 1
  DOTNET_GENERATE_ASPNET_CERTIFICATE: 0
  DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: 0
  DOTNET_MULTILEVEL_LOOKUP: 0
  DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: 1
  TERM: xterm

on:
  push:
    branches: [ master ]
    paths:
      - '**.cs'
      - '**.csproj'
      - '**.sln'
      - '**.git**'
      - '**.yml'
      # no docs on which one of these is supposed to work, so
      # why not just do both
      - 'RobustToolbox'
      - 'RobustToolbox/**'
  pull_request:
    branches: [ master ]
    paths:
      - '**.cs'
      - '**.csproj'
      - '**.sln'
      - '**.git**'
      - '**.yml'
      - 'RobustToolbox'
      - 'RobustToolbox/**'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout Master
      uses: actions/checkout@v3

    - name: Setup Submodule
      run: |
        git submodule update --init --recursive

    - name: Pull engine updates
      uses: space-wizards/submodule-dependency@v0.1.5

    - name: Update Engine Submodules
      run: |
        cd RobustToolbox/
        git submodule update --init --recursive

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - uses: actions/cache@v1
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Install dependencies
      run: dotnet restore

    - name: Build Project
      run: dotnet build --configuration Debug --no-restore /p:WarningsAsErrors=nullable /m

    - name: Run Content.Tests
      run: dotnet test --no-build Content.Tests/Content.Tests.csproj -- NUnit.ConsoleOut=0

